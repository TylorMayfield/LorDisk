name: Build LorDisk

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  release:
    types: [published]

env:
  NODE_VERSION: "18"
  ELECTRON_VERSION: "25.0.0"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        run: npm run build

      - name: Build Electron app
        run: npm run electron:build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lordisk-${{ runner.os }}-${{ matrix.node-version }}
          path: |
            dist/
            !dist/**/*.blockmap
            !dist/**/*.dmg
            !dist/**/*.exe
            !dist/**/*.deb
            !dist/**/*.rpm
            !dist/**/*.AppImage
            !dist/**/*.snap

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release Assets
        run: |
          mkdir -p release-assets

          # Find and copy all built files
          find artifacts -name "*.exe" -o -name "*.dmg" -o -name "*.AppImage" -o -name "*.deb" -o -name "*.rpm" -o -name "*.snap" | while read file; do
            cp "$file" release-assets/
          done

          # Create zip files for each platform
          cd release-assets

          # Windows
          if ls *.exe 1> /dev/null 2>&1; then
            zip -r LorDisk-Windows.zip *.exe
          fi

          # macOS
          if ls *.dmg 1> /dev/null 2>&1; then
            zip -r LorDisk-macOS.zip *.dmg
          fi

          # Linux
          if ls *.AppImage *.deb *.rpm *.snap 1> /dev/null 2>&1; then
            zip -r LorDisk-Linux.zip *.AppImage *.deb *.rpm *.snap
          fi

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./release-assets/LorDisk-${{ runner.os }}.zip
          asset_name: LorDisk-${{ runner.os }}.zip
          asset_content_type: application/zip

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run linting
        run: npm run lint

      - name: Type check
        run: npm run type-check
